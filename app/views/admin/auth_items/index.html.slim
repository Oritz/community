=render 'admin/accounts/nav'
=content_for(:content) do
  ul#my_tab.nav.nav-tabs
    li id="#{AuthItem::TYPE_ROLE}"
      =link_to(AuthItem.human_attribute_name(:auth_type_names)[AuthItem::TYPE_ROLE], '#role')
    li id="#{AuthItem::TYPE_TASK}"
      =link_to(AuthItem.human_attribute_name(:auth_type_names)[AuthItem::TYPE_TASK], '#task')
    li id="#{AuthItem::TYPE_OPERATION}"
      =link_to(AuthItem.human_attribute_name(:auth_type_names)[AuthItem::TYPE_OPERATION], '#operation')
  .tab-content
    #role.tab-pane
      -unless @roles.empty?
        table.table.table-striped.table-bordered.table-condensed
          thead:tr
            th= AuthItem.human_attribute_name(:name)
            th=t('helpers.actions')
          tbody
            -@roles.each do |role|
              tr
                td = role.name
                td
                  =link_to(admin_auth_item_path(role)) do
                    span.glyphicon.glyphicon-eye-open
                  =link_to(edit_admin_auth_item_path(role)) do
                    span.glyphicon.glyphicon-edit
                  = link_to(admin_auth_item_path(role), :method => :delete, :confirm => t('helpers.links.confirm')) do
                    span.glyphicon.glyphicon-remove
      -else
        =t('admin.msg.no_data')
      div
        a.btn.btn-primary href=new_admin_auth_item_path(auth_type: AuthItem::TYPE_ROLE)
          =t('admin.auth_item.new')
    #task.tab-pane
      -unless @tasks.empty?
        table.table.table-striped.table-bordered.table-condensed
          thead:tr
            th= AuthItem.human_attribute_name(:name)
            th=t('helpers.actions')
          tbody
            -@tasks.each do |task|
              tr
                td=task.name
                td
                  =link_to(admin_auth_item_path(task), :class=>'btn btn-small btn-warning') do
                    span.icon-eye-open
                  =link_to(edit_admin_auth_item_path(task), :class=>'btn btn-small btn-warning') do
                    span.icon-edit
                  = link_to(admin_auth_item_path(task), :class=>'btn btn-small btn-warning', :confirm => t('helpers.links.confirm'), :method => :delete) do
                    span.icon-remove
      -else
        =t('admin.msg.no_data')
      div
        a.btn.btn-primary href=new_admin_auth_item_path(auth_type: AuthItem::TYPE_TASK)
          =t('admin.auth_item.new')
    #operation.tab-pane
      -unless @operations.empty?
        table.table.table-striped.table-bordered.table-condensed
          thead:tr
            th= AuthItem.human_attribute_name(:name)
            th=t('helpers.actions')
          tbody
            -@operations.each do |operation|
              tr
                td=operation.name
                td
                  =link_to(admin_auth_item_path(operation), :class=>'btn btn-small btn-warning') do
                    i.icon-eye-open
                  =link_to(edit_admin_auth_item_path(operation), :class=>'btn btn-small btn-warning') do
                    i.icon-edit
                  = link_to(admin_auth_item_path(operation), :class=>'btn btn-small btn-warning', :confirm => t('helpers.links.confirm'), :method => :delete) do
                    i.icon-remove
      -else
        =t('admin.msg.no_data')
      div
        a.btn.btn-primary href=new_admin_auth_item_path(auth_type: AuthItem::TYPE_OPERATION)
          =t('admin.auth_item.new')
=content_for(:js_files) do
  javascript:
    $("##{@actived_type} a").tab('show');
    $('#my_tab a').click(function(e){
      e.preventDefault();
      $(this).tab('show')
    })
